# 年终总结

##
时值年末，2022年已经接近尾声，回顾过去的一年，在部门领导和各位同事的帮助下，个人能力得到了实质性的提升，但还是有很大的不足。
现对我过去一年的主要工作任务及完成情况，工作能力提升、自我状态剖析等方面进行简要的总结；
自2021年入职公司，截止目前为止所完成的主要工作任务如下：







1. 芯片项目：完成 Lepus、Canopus、Vega、Scorpio 验证工作，以及正在进行的 Virgo 芯片 FPGA 阶段验证工作。
	- Lepus：FPGA 阶段的 FMC、SPI、DMA 模块验证
		- 测试用例评审工作、移植 FMC 驱动到 Linux  Kernel，IP 内部 DMA 问题建问题给 SOC
		- Uboot 中支持电机驱动芯片的驱动
		- DMA 模块非链表模式、链表模式功能测试通过，内存到内存、内存到外设、外设到内存测试通过，支持 Uart-DMA、IIC-DMA 测试工作
		- ROM FLASH 驱动代码确认
		- 支持 Uboot Stage1 的 Nor Flash 驱动
	- Canopus：芯片阶段的 SPI 模块验证
		- SPI 模块 Nor、Nand 功能测试、性能测试、兼容性测试，其中有一款 SPI NAND ROM 无法启动，与芯片一起分析原因
		- SPI Nand 启动卡住，添加引脚复用代码
		- 启动 Linux 阶段读取 minifs 数据出错，由 spi fifo 大小端引起的问题
		- SPI、NFC 模块的安全特性测试，测试 SPI、NFC 对保护内存的读写权限
		- Sample_delay 调试
	- Vega：芯片阶段的 SPI 模块验证
		- SPI 模块 Nor、Nand 功能测试、性能测试、兼容性测试
		- SPI、NFC 模块的安全特性测试，测试 SPI、NFC 对保护内存的读写权限
		- 芯片测试结果评审
		- [Vega] 双核下出现 spi_read 卡死，由 AV 引起的此问题
		- CPU 频率与 SPI 模块频率相差过大会导致出现空中断(中断ID：1023)，已建问题给 soc #364243
		- Vega ROM 阶段和 Stage1 阶段读 SPI Nand 都是用的 NFC，确认 Stage1 NFC 稳定可用的参数
		- 测试 SPI 模块内部 DMA 8bit 和 32bit 位宽的性能对比。由于 SPI 的大小段由硬件转换了，导致 DMA 32bit 位宽时会出现大小端反掉的问题
	- Scorpio：FPGA 阶段的 GX_SPI、DW_SPI 模块验证
		- SPI 模块 Nor、Nand 功能测试、性能测试、兼容性测试
		- 解决 DW_SPI 由于编译器优化导致的中断卡死问题(驱动中循环等待一个变量的值，中断中给这个变量赋值，编译器只会获取一次这个变量的值在循环中进行比较，中断后更新的值没有成功被获取到导致卡死，使用 volatile 的方式解决此问题)
		- 芯片测试结果评审
	- Virgo：FPGA 阶段的 FMC、SPI、DMA 模块验证
		- FMC 模块 Nor Flash 功能测试基本完成，由于 Virgo 的 FMC 有 2 个 CS 引脚，需要单独测试另一个 CS 引脚;
2. GoXceed 项目：
	- gxmisc 和 uboot 工程整合，对接 gxmisc 到 uboot，目前已完成 Nor Flash 的驱动对接到 gxmisc
	- cygnus 芯片 dw_spi 在宽电压环境下测试对应的 clk_div 和 sample_delay
	- 解决 slt 慢，提升 Stage1 阶段 SPI 工作频率，加快 Stage1 拷贝 Stage2 的频率
	- 完成各个分支对于 Nor、SPINAND 和 NAND Flash 的支持需求，并解决 Flash 支持过程中遇到的各种问题
	- 支持 Flash 的 otp 读写操作以及 UID 功能
	- 发布 gxmisc 最新版本、优化 gxmisc 中 Nor Flash 的写保护功能、优化 SPI Nand readpage 接口、维护支持列表、用户手册
	- 客户有一批 XM25QH64C 的 flash 在进行 otp 操作时失败，flash 厂家抓到我们操作 otp 的指令不对，但内部验证是正确的的，等客户下周发回有问题的 flash 再进行测试 #344341
	- 维护 gxtools 下 nand flash 工具
	- 添加 git 管理 Flash 掉电测试代码
	- 提供 DW_SPI 对各芯片的支持，并确保 Sample_delay 的稳定性
	- 分析解决量产阶段遇到的各种 Flash 问题
		- [Sirus]天地星 天地星TDX-1288C-B，V330C单模量产生产问题分析，定位问题原因，联系 XTX 厂商给出答复
		** 至讯创新 spi nand 颗粒验证支持，厂商 trim 版本弄错了导致出现读写擦出错
		** [Canopus]GX6631+RDA5815M在写flash过程中MOSI管脚有过冲，驱动提供降低驱动能力补丁，并且 XTX 厂商给出驱动能力风险说明文档
		** 江波龙flash无法开机，无法开机的原因是江波龙厂商发了一批存在 R/B Bug 的产品给客户，目前他们已给出文档说明后续哪些版本不存在 R/B bug
	- 提供开启 Jlink 密码板子连接 jlink 方法的文档
	- 熟悉 Onfi 标准
	- 配合 SOC 部门确认 Canopus 项目 Flash 100MHz 的 CLK 引脚波形
	- SPI NOR Flash 支持 WPS=1 的写保护模式，提供驱动给 BU1 使用
	- 添加 DW_SPI 的相位自动化测试程序
	- gxmisc 编译支持 ./build <ARCH> nos 编译选项
	- gxloader、ecos 中添加 Scorpio 芯片 GX_SPI、DW_SPI 支持
	- gxapi 中支持 SPINAND、NAND Flash 的获取信息接口，并添加 ecos、linux 的测试程序，提供驱动给 BU1 使用
	- gxloader 中 Stage1 flash 时钟使用 50MHz 时，读指令 0x03 有部分 Flash 的最高工作频率在 50MHz，切换成 0x0b 指令
	- USB 升级有概率出现升级超时死循环，由于 arm 多核引起的乱序执行导致 CS 引脚推迟拉高
        - SPI 加入 DMA 功能后由于 CPU 投机读取引起的问题，gxloader 中 SPI 驱动优化，防止投机读取
	- ecos 中 SPI 驱动添加 DMA 功能，使用中断和信号量做同步释放 CPU
	- canopus ecos jffs2 自动测试用例使用DMA读写flash死机，驱动中 dma 操作时，内存地址会进行 cache_line 对齐，不对齐的部分用 cpu 读，对齐的部分用 dma 读，但可能出现 cpu 想要读的长度大于实际应该读的长度导致 dma 大量冲内存

3. RobotOS 项目：
	- GX8008C 1.8v Flash 兼容性测试
	- GX8008C 外接 32MB、64MB Nor Flash 评估，leo_mini ROM 不支持 4 字节访问 Flash
	- 8002B 芯片有 64 字节无法擦除和写入，Flash 问题
	- SCPU、VSP 平台支持各种 Nor、SPINAND Flash
	- SCPU、VSP 平台支持 OTP 操作，提供驱动给 BUX 使用
	- 异常芯片 Flash 完整测试，测试 grus 内封的 puya flash，确实存在有一个地址擦除后数据为 0xbf，但是正常的写入数据也可以写入成功；修改 SPI 模块时钟和 SPI 内部分频之后不会出现此问题
	- SCPU、VSP 平台支持 UID 操作，提供驱动给 BUX 使用
	- grus 芯片写保护功能
	- Leo、Leo_mini 提供各个工作频率下可用的相位范围
	- 客户厂线发现部分机器语音无法唤醒，定位问题原因是厂商寄过来的物料中有几颗 Flash 配置寄存器中 DC 位的配置与芯片默认值不匹配

4. 专利：一种NAND Flash坏块标记管理方法，已提交申请












工作完成情况：能够完成大部分交代的任务，部分任务在执行过程中会存在需要支持的情况

这些充实的工作内容让我的工作能力相比较于入职期间有了很大的提升，能够独立阅读庞大的代码量。也让我在工作中更奋进向上，面对工作中出现的问题时乐于去钻研专业知识。

## 突出业绩或贡献（可圈可点之处）:

1. 支持事业部完成存储相关驱动调试
2. cygnus spi 模块芯片验证
3. Lepus fmc fpga 阶段验证工作

## 存在不足
经过这一年的工作学习，我在工作中也存在一些不足之处，例如：
1. soc 相关知识了解较少，需要加强这方面的了解才能更好的同芯片部门的同事进行联调问题
2. 英语阅读能力需要提高，阅读 ip 手册时需要借
3. 代码阅读及编写能力需要提高

针对以上不足之处，我会精准改正，不断提升，力求让自己能够变得更加出色，也希望通过对问题的改正，让自己能够持续发挥更大的价值，不断进步。


## 对公司各项工作建设的合理化建议，哪些制度尚待建立和完善？ 
目前感觉良好，无建议

## 在生活、工作中所面临哪些困难？需要公司提供哪些帮助？
生活、工作中未面临困难，不需要公司提供帮助

