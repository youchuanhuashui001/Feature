{
    "manifest": {
        "translationVersion": 1732190818783,
        "pluginVersion": "0.5.67"
    },
    "description": {
        "original": "Complex data views for the data-obsessed.",
        "translation": "Complex data views for the data-obsessed."
    },
    "dict": {
        ".log(`Dataview: Encountered a circular list (line number ${lineno}; children ${this.listItems[lineno].children.join(\", \")": ".log(`Dataview: Encountered a circular list (line number ${lineno}; children ${this.listItems[lineno].children.join(\", \")",
        ".log(`Dataview: re-initialized index with ${files.length} files (${(Date.now()": ".log(`Dataview: re-initialized index with ${files.length} files (${(Date.now()",
        ".log(`Dataview: all ${files.length} files have been indexed in ${(Date.now()": ".log(`Dataview: all ${files.length} files have been indexed in ${(Date.now()",
        ".log(`Dataview: Dropped cache entries for ${remaining.size} deleted files.`)": ".log(`Dataview: Dropped cache entries for ${remaining.size} deleted files.`)",
        ".log(`Dataview: version ${this.manifest.version} (requires obsidian ${this.manifest.minAppVersion})": ".log(`Dataview: version ${this.manifest.version} (requires obsidian ${this.manifest.minAppVersion})",
        ".log(`Dataview: version ${this.manifest.version} unloaded.`)": ".log(`Dataview: version ${this.manifest.version} unloaded.`)",
        ".error({name:e},t,r,i)": ".error({name:e},t,r,i)",
        ".error(e)": ".error(e)",
        ".error(\"Couldn't convert value into a JSON string: \", value)": ".error(\"Couldn't convert value into a JSON string: \", value)",
        "name: 'localforage'": "name: 'localforage'",
        "name: \"dataview/cache/\"": "name: \"dataview/cache/\"",
        "name: \"Dataview Indexer \"": "name: \"Dataview Indexer \"",
        "name: \"Force refresh all views and blocks\"": "name: \"Force refresh all views and blocks\"",
        "name: \"Drop all cached file metadata\"": "name: \"Drop all cached file metadata\"",
        "name: \"Rebuild current view\"": "name: \"Rebuild current view\"",
        "description: '',\n\t    driver: DefaultDriverOrder.slice(),\n\t    name: '": "description: '',\n\t    driver: DefaultDriverOrder.slice(),\n\t    name: '",
        "description: \"Cache metadata about files and sections in the dataview index.\"": "description: \"Cache metadata about files and sections in the dataview index.\"",
        ".setName(\"Enable inline queries\")": ".setName(\"Enable inline queries\")",
        ".setName(\"Enable JavaScript queries\")": ".setName(\"Enable JavaScript queries\")",
        ".setName(\"Enable inline JavaScript queries\")": ".setName(\"Enable inline JavaScript queries\")",
        ".setName(\"Enable inline field highlighting in reading view\")": ".setName(\"Enable inline field highlighting in reading view\")",
        ".setName(\"Enable inline field highlighting in Live Preview\")": ".setName(\"Enable inline field highlighting in Live Preview\")",
        ".setName(\"Codeblocks\")": ".setName(\"Codeblocks\")",
        ".setName(\"DataviewJS keyword\")": ".setName(\"DataviewJS keyword\")",
        ".setName(\"Inline query prefix\")": ".setName(\"Inline query prefix\")",
        ".setName(\"JavaScript inline query prefix\")": ".setName(\"JavaScript inline query prefix\")",
        ".setName(\"Code block inline queries\")": ".setName(\"Code block inline queries\")",
        ".setName(\"View\")": ".setName(\"View\")",
        ".setName(\"Display result count\")": ".setName(\"Display result count\")",
        ".setName(\"Warn on empty result\")": ".setName(\"Warn on empty result\")",
        ".setName(\"Render null as\")": ".setName(\"Render null as\")",
        ".setName(\"Automatic view refreshing\")": ".setName(\"Automatic view refreshing\")",
        ".setName(\"Refresh interval\")": ".setName(\"Refresh interval\")",
        ".setName(\"Date format\")": ".setName(\"Date format\")",
        ".setName(\"Date + time format\")": ".setName(\"Date + time format\")",
        ".setName(\"Tables\")": ".setName(\"Tables\")",
        ".setName(\"Primary column name\")": ".setName(\"Primary column name\")",
        ".setName(\"Grouped column name\")": ".setName(\"Grouped column name\")",
        ".setName(\"Tasks\")": ".setName(\"Tasks\")",
        ".setName(\"Automatic task completion tracking\")": ".setName(\"Automatic task completion tracking\")",
        ".setName(\"Use emoji shorthand for completion\")": ".setName(\"Use emoji shorthand for completion\")",
        ".setName(\"Completion field name\")": ".setName(\"Completion field name\")",
        ".setName(\"Completion date format\")": ".setName(\"Completion date format\")",
        ".setName(\"Recursive sub-task completion\")": ".setName(\"Recursive sub-task completion\")",
        ".setDesc(\"Enable or disable executing regular inline Dataview queries.\")": ".setDesc(\"Enable or disable executing regular inline Dataview queries.\")",
        ".setDesc(\"Enable or disable executing DataviewJS queries.\")": ".setDesc(\"Enable or disable executing DataviewJS queries.\")",
        ".setDesc(\"Enable or disable executing inline DataviewJS queries. Requires that DataviewJS queries are enabled.\")": ".setDesc(\"Enable or disable executing inline DataviewJS queries. Requires that DataviewJS queries are enabled.\")",
        ".setDesc(\"Enables or disables visual highlighting / pretty rendering for inline fields in reading view.\")": ".setDesc(\"Enables or disables visual highlighting / pretty rendering for inline fields in reading view.\")",
        ".setDesc(\"Enables or disables visual highlighting / pretty rendering for inline fields in Live Preview.\")": ".setDesc(\"Enables or disables visual highlighting / pretty rendering for inline fields in Live Preview.\")",
        ".setDesc(\"Keyword for DataviewJS blocks. Defaults to 'dataviewjs'. Reload required for changes to take effect.\")": ".setDesc(\"Keyword for DataviewJS blocks. Defaults to 'dataviewjs'. Reload required for changes to take effect.\")",
        ".setDesc(\"The prefix to inline queries (to mark them as Dataview queries). Defaults to '='.\")": ".setDesc(\"The prefix to inline queries (to mark them as Dataview queries). Defaults to '='.\")",
        ".setDesc(\"The prefix to JavaScript inline queries (to mark them as DataviewJS queries). Defaults to '$='.\")": ".setDesc(\"The prefix to JavaScript inline queries (to mark them as DataviewJS queries). Defaults to '$='.\")",
        ".setDesc(\"If enabled, inline queries will also be evaluated inside full code blocks.\")": ".setDesc(\"If enabled, inline queries will also be evaluated inside full code blocks.\")",
        ".setDesc(\"If toggled off, the small number in the result header of TASK and TABLE queries will be hidden.\")": ".setDesc(\"If toggled off, the small number in the result header of TASK and TABLE queries will be hidden.\")",
        ".setDesc(\"If set, queries which return 0 results will render a warning message.\")": ".setDesc(\"If set, queries which return 0 results will render a warning message.\")",
        ".setDesc(\"What null/non-existent should show up as in tables, by default. This supports Markdown notation.\")": ".setDesc(\"What null/non-existent should show up as in tables, by default. This supports Markdown notation.\")",
        ".setDesc(\"If enabled, views will automatically refresh when files in your vault change; this can negatively affect\" +\n            \" some functionality like embeds in views, so turn it off if such functionality is not working.\")": ".setDesc(\"If enabled, views will automatically refresh when files in your vault change; this can negatively affect\" +\n            \" some functionality like embeds in views, so turn it off if such functionality is not working.\")",
        ".setDesc(\"How long to wait (in milliseconds) for files to stop changing before updating views.\")": ".setDesc(\"How long to wait (in milliseconds) for files to stop changing before updating views.\")",
        ".setDesc(\"The name of the default ID column in tables; this is the auto-generated first column that links to the source file.\")": ".setDesc(\"The name of the default ID column in tables; this is the auto-generated first column that links to the source file.\")",
        ".setDesc(\"The name of the default ID column in tables, when the table is on grouped data; this is the auto-generated first column\" +\n            \"that links to the source file/group.\")": ".setDesc(\"The name of the default ID column in tables, when the table is on grouped data; this is the auto-generated first column\" +\n            \"that links to the source file/group.\")",
        ".setDesc('Only available when \"automatic task completion tracking\" is enabled.')": ".setDesc('Only available when \"automatic task completion tracking\" is enabled.')",
        ".setDesc('Only available when \"automatic task completion tracking\" is enabled and \"use emoji shorthand for completion\" is disabled.')": ".setDesc('Only available when \"automatic task completion tracking\" is enabled and \"use emoji shorthand for completion\" is disabled.')",
        ".setDesc(\"If enabled, completing a task in a Dataview will automatically complete its subtasks too.\")": ".setDesc(\"If enabled, completing a task in a Dataview will automatically complete its subtasks too.\")",
        ".setPlaceholder(\"dataviewjs\")": ".setPlaceholder(\"dataviewjs\")",
        ".setPlaceholder(\"=\")": ".setPlaceholder(\"=\")",
        ".setPlaceholder(\"$=\")": ".setPlaceholder(\"$=\")",
        ".setPlaceholder(\"-\")": ".setPlaceholder(\"-\")",
        ".setPlaceholder(\"500\")": ".setPlaceholder(\"500\")",
        ".setPlaceholder(\"File\")": ".setPlaceholder(\"File\")",
        ".setPlaceholder(\"Group\")": ".setPlaceholder(\"Group\")",
        ".appendText(\"...\")": ".appendText(\"...\")",
        ".appendText(\": \")": ".appendText(\": \")",
        ".appendText(`<unknown widget '${field.$widget}>`)": ".appendText(`<unknown widget '${field.$widget}>`)",
        ".appendText(\"<function>\")": ".appendText(\"<function>\")",
        ".appendText(\"<empty list>\")": ".appendText(\"<empty list>\")",
        ".appendText(\", \")": ".appendText(\", \")",
        ".appendText(`<${field.constructor.name}>`)": ".appendText(`<${field.constructor.name}>`)",
        ".appendText(\"<empty object>\")": ".appendText(\"<empty object>\")",
        ".appendText(\"If enabled, Dataview will automatically append tasks with their completion date when they are checked in Dataview views.\")": ".appendText(\"If enabled, Dataview will automatically append tasks with their completion date when they are checked in Dataview views.\")",
        ".appendText(\"Example with default field name and date format: - [x] my task [completion:: 2022-01-01]\")": ".appendText(\"Example with default field name and date format: - [x] my task [completion:: 2022-01-01]\")",
        ".appendText('If enabled, will use emoji shorthand instead of inline field formatting to fill out implicit task field \"completion\".')": ".appendText('If enabled, will use emoji shorthand instead of inline field formatting to fill out implicit task field \"completion\".')",
        ".appendText(\"Example: - [x] my task ✅ 2022-01-01\")": ".appendText(\"Example: - [x] my task ✅ 2022-01-01\")",
        ".appendText(\"Disable this to customize the completion date format or field name, or to use Dataview inline field formatting.\")": ".appendText(\"Disable this to customize the completion date format or field name, or to use Dataview inline field formatting.\")",
        ".appendText('Only available when \"automatic task completion tracking\" is enabled.')": ".appendText('Only available when \"automatic task completion tracking\" is enabled.')",
        ".appendText(\"Text used as inline field key for task completion date when toggling a task's checkbox in a Dataview view.\")": ".appendText(\"Text used as inline field key for task completion date when toggling a task's checkbox in a Dataview view.\")",
        ".appendText('Only available when \"automatic task completion tracking\" is enabled and \"use emoji shorthand for completion\" is disabled.')": ".appendText('Only available when \"automatic task completion tracking\" is enabled and \"use emoji shorthand for completion\" is disabled.')",
        ".innerText = \"(disabled; enable in settings)\"": ".innerText = \"(disabled; enable in settings)\""
    }
}
